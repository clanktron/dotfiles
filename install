#!/bin/sh
# text attributes
# bold=$(tput bold)
green=$(tput setaf 2)
orange=$(tput setaf 166)
red=$(tput setaf 1)
light_green=$(tput setaf 178)
light_orange=$(tput setaf 208)
light_red=$(tput setaf 196)
reset=$(tput sgr0)

info() {
    echo "${green}[ INFO ]${reset} ${light_green}$1${reset}"
}

warn() {
    echo "${orange}[ WARN ]${reset} ${light_orange}$1${reset}"
}

error() {
    echo "${red}[ ERROR ]${reset} ${light_red}$1${reset}"
}

HOME="${HOME:?}"
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}"
export HOME
export XDG_CONFIG_HOME
DOTFILES_DIR=$(dirname "$(realpath "$0")")
OS=$(uname)

# Flags
LINK_FLAG=false
BREW_FLAG=false
while [ $# -gt 0 ]; do
  case "$1" in
    -l)
      LINK_FLAG=true
      shift
      ;;
    -b)
      export BREW_FLAG=true
      shift
      ;;
    -lb)
      LINK_FLAG=true
      export BREW_FLAG=true
      shift
      ;;
    *)
      # If it's not a flag, assume it's an argument
      # arg="$1"
      shift
      ;;
  esac
done

if [ "$LINK_FLAG" = "true" ]; then
    install_action="ln -svf"
    action_msg="Symlinking"
else
    install_action="cp -r"
    action_msg="Copying"
fi

ensure_paths() {
    # Ensure ~/.config path is available
    if [ ! -d "$HOME"/.config ]; then
        info "Creating $HOME/.config directory..."
        mkdir "$HOME"/.config
    fi

    # Ensure ~/.local/bin path is available for install
    if [ ! -d "$HOME"/.local ]; then
        info "Creating $HOME/.local directory..."
        mkdir "$HOME"/.local
        info "Creating $HOME/.local/bin directory..."
        mkdir "$HOME"/.local/bin
    else
        if [ ! -d "$HOME"/.local/bin ]; then
            mkdir "$HOME"/.local/bin
        fi
    fi
}

remove_installation() {
    "$DOTFILES_DIR"/uninstall
}

install_packages() {
    if [ "$OS" = "Darwin" ]; then
        "$DOTFILES_DIR"/darwin/install.sh
    fi
}

install_scripts() {
    install_action="$1"
    action_msg="$2"
    # Softlink all executables in bin directory to ~/.local/bin
    info "$action_msg scripts/excecutables..."
    find "$DOTFILES_DIR"/bin -maxdepth 1 -exec basename {} \; | sed 1d | while read -r file; do 
        eval "$install_action" "$DOTFILES_DIR"/bin/"$file" "$HOME"/.local/bin/"$file"
    done
}

install_config () {
    install_action="$1"
    action_msg="$2"
    # Install all directories in ./config to ~/.config
    info "$action_msg config folders..."
    find "$DOTFILES_DIR"/config -maxdepth 1 -exec basename {} \; | sed 1d | while read -r dir; do 
        eval "$install_action" "$DOTFILES_DIR"/config/"$dir" "$XDG_CONFIG_HOME/$dir"
    done

    # these should eventually be migrated to some sort of generic function
    eval "$install_action" "$DOTFILES_DIR"/.bashrc "$HOME"/.bashrc
    mkdir "$HOME"/.hammerspoon
    eval "$install_action" "$DOTFILES_DIR"/config/hammerspoon/init.lua "$HOME"/.hammerspoon/init.lua
}

main () {
    ensure_paths
    remove_installation
    install_config "$install_action" "$action_msg"
    install_scripts "$install_action" "$action_msg"
    install_packages 
    info "Done!"
}

main
