#!/bin/sh
. ./bin/vars.sh
. ./bin/formatting.sh

show_help() {
    echo "Usage: ./install [options]"
    echo ""
    echo "Options:"
    echo "  -l, --link       Create symbolic links instead of copying files"
    echo "  -b, --backup     Backup any non-symlink files to be overwritten"
    echo "  -h, --help       Display this help message and exit"
}

INSTALL="cp -r"
INSTALL_MSG="Copying"
BACKUP=false
while [ $# -gt 0 ]; do
  case "$1" in
    -l | --link)
        INSTALL="ln -svf"
        INSTALL_MSG="Symlinking"
        shift
        ;;
    -b | --backup)
        BACKUP=true
        shift
        ;;
    -h | --help)
        show_help
        exit
        ;;
    *)
        show_help
        exit 1
        ;;
esac
done
export INSTALL
export INSTALL_MSG
export BACKUP

remove_existing_installation() {
    "$DOTFILES_DIR"/uninstall
}

ensure_config_dirs() {
    if [ ! -d "$HOME"/.config ]; then
        info "Creating $HOME/.config directory...\n"
        mkdir "$HOME"/.config
    fi
}

ensure_script_dirs() {
    if [ ! -d "$HOME"/.local ]; then
        info "Creating $HOME/.local directory...\n"
        mkdir "$HOME"/.local
        info "Creating $HOME/.local/bin directory...\n"
        mkdir "$HOME"/.local/bin
    elif [ ! -d "$HOME"/.local/bin ]; then
        info "Creating $HOME/.local/bin directory...\n"
        mkdir "$HOME"/.local/bin
    fi
}

install_config () {
    ensure_config_dirs
    info "$INSTALL_MSG config folders...\n"
    for config in "$DOTFILES_DIR"/config/*; do
        eval "$INSTALL" "$config" "$XDG_CONFIG_HOME/${config##*/}"
    done
    eval "$INSTALL" "$DOTFILES_DIR"/.bashrc "$HOME"/.bashrc
}

install_scripts() {
    ensure_script_dirs
    info "$INSTALL_MSG scripts/excecutables...\n"
    for executable in "$DOTFILES_DIR"/bin/*; do
        eval "$INSTALL" "$executable" "$HOME/.local/bin/${executable##*/}"
    done
}

OS_script() {
    if [ "$(uname)" = "Darwin" ]; then
        "$DOTFILES_DIR"/darwin/install
    fi
}

main() {
    remove_existing_installation
    install_config
    install_scripts
    OS_script
    info "Done!\n"
}

main
