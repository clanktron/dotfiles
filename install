#!/bin/sh
. ./vars.sh
. ./formatting.sh

INSTALL="cp -r"
INSTALL_MSG="Copying"
while [ $# -gt 0 ]; do
  case "$1" in
    -l | --link)
        INSTALL="ln -svf"
        INSTALL_MSG="Symlinking"
        shift
        ;;
    *)
        # If it's not a flag, assume it's an argument
        # arg="$1"
        shift
        ;;
esac
done
export INSTALL
export INSTALL_MSG

ensure_paths() {
    # Ensure ~/.config path is available
    if [ ! -d "$HOME"/.config ]; then
        info "Creating $HOME/.config directory..."
        mkdir "$HOME"/.config
    fi
    # Ensure ~/.local/bin path is available for install
    if [ ! -d "$HOME"/.local ]; then
        info "Creating $HOME/.local directory..."
        mkdir "$HOME"/.local
        info "Creating $HOME/.local/bin directory..."
        mkdir "$HOME"/.local/bin
    else
        if [ ! -d "$HOME"/.local/bin ]; then
            mkdir "$HOME"/.local/bin
        fi
    fi
}

remove_installation() {
    "$DOTFILES_DIR"/uninstall
}

OS_script() {
    if [ "$(uname)" = "Darwin" ]; then
        "$DOTFILES_DIR"/darwin/install.sh
    fi
}

install_scripts() {
    # Softlink all executables in bin directory to ~/.local/bin
    info "$INSTALL_MSG scripts/excecutables..."
    BIN_DIR="$DOTFILES_DIR"/bin
    find "$BIN_DIR" -maxdepth 1 -exec basename {} \; | sed 1d | while read -r file; do 
        eval "$INSTALL" "$BIN_DIR"/"$file" "$HOME"/.local/bin/"$file"
    done
}

install_config () {
    # Install all directories in ./config to ~/.config
    info "$INSTALL_MSG config folders..."
    CONFIG_DIR="$DOTFILES_DIR"/config
    find "$CONFIG_DIR" -maxdepth 1 -exec basename {} \; | sed 1d | while read -r dir; do 
        eval "$INSTALL" "$CONFIG_DIR"/"$dir" "$XDG_CONFIG_HOME/$dir"
    done
    # these should eventually be migrated to some sort of generic function
    eval "$INSTALL" "$DOTFILES_DIR"/.bashrc "$HOME"/.bashrc
    mkdir "$HOME"/.hammerspoon
    eval "$INSTALL" "$CONFIG_DIR"/hammerspoon/init.lua "$HOME"/.hammerspoon/init.lua
}

ensure_paths
remove_installation
install_config
install_scripts
OS_script
info "Done!"
