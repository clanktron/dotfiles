-- local require('lspconfig').setup()
-- 
-- local function config(_config)
-- 	return vim.tbl_deep_extend("force", {
-- 		on_attach = function()
-- 			nnoremap("gd", function() vim.lsp.buf.definition() end)
-- 			nnoremap("K", function() vim.lsp.buf.hover() end)
-- 			nnoremap("<leader>vws", function() vim.lsp.buf.workspace_symbol() end)
-- 			nnoremap("<leader>vd", function() vim.diagnostic.open_float() end)
-- 			nnoremap("[d", function() vim.diagnostic.goto_next() end)
-- 			nnoremap("]d", function() vim.diagnostic.goto_prev() end)
-- 			nnoremap("<leader>vca", function() vim.lsp.buf.code_action() end)
-- 			nnoremap("<leader>vco", function() vim.lsp.buf.code_action({
--                 filter = function(code_action)
--                     if not code_action or not code_action.data then
--                         return false
--                     end
-- 
--                     local data = code_action.data.id
--                     return string.sub(data, #data - 1, #data) == ":0"
--                 end,
--                 apply = true
--             }) end)
-- 			nnoremap("<leader>vrr", function() vim.lsp.buf.references() end)
-- 			nnoremap("<leader>vrn", function() vim.lsp.buf.rename() end)
-- 			inoremap("<C-h>", function() vim.lsp.buf.signature_help() end)
-- 		end,
-- 	}, _config or {})
-- end
-- 
-- lspconfig['ansiblels'].setup(config())
-- 
-- lspconfig['ansiblels'].setup(config())
-- 
-- lspconfig['arduino_langauge_server'].setup(config())
-- 
-- lspconfig['asm_lsp'].setup(config())
-- 
-- lspconfig['astro'].setup(config())
-- 
-- lspconfig['bashls'].setup(config())
-- 
-- lspconfig['clangd'].setup(config())
-- 
-- lspconfig['cmake'].setup(config())
-- 
-- lspconfig['cssls'].setup(config())
-- 
-- lspconfig['dockerls'].setup(config())
-- 
-- lspconfig['gopls'].setup(config())
-- 
-- lspconfig['html'].setup(config())
-- 
-- lspconfig['jsonls'].setup(config())
-- 
-- lspconfig['tsserver'].setup(config())
-- 
-- lspconfig['ltex'].setup(config())
-- 
-- lspconfig['marksman'].setup(config())
-- 
-- lspconfig['pyright'].setup(config())
-- 
-- lspconfig['rust_analyzer'].setup(config())
-- 
-- lspconfig['solang'].setup(config())
-- 
-- lspconfig['terraformls'].setup(config())
-- 
-- lspconfig["sumneko_lua"].setup({
--   on_attach = on_attach,
--   settings = { -- custom settings for lua
--     Lua = {
--       -- make the language server recognize "vim" global
--       diagnostics = {
--         globals = { "vim" },
--       },
--       workspace = {
--         -- make language server aware of runtime files
--         library = {
--           [vim.fn.expand("$VIMRUNTIME/lua")] = true,
--           [vim.fn.stdpath("config") .. "/lua"] = true,
--         },
--       },
--     },
--   },
-- })
